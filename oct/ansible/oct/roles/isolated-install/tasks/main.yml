---
# there are too many difficulties with attempting to cleanly
# apply all upgrade and downgrade scenarios, so we instead
# simply remove whatever selected packages are installed on
# the host before trying to install the ones that we need

- name: ensure the user provided the package to install
  fail:
    msg: 'This playbook requires {{ item }} to be set.'
  when: item not in vars and item not in hostvars[inventory_hostname]
  with_items:
    - origin_ci_isolated_package_name
    
- name: export the full name of the package to install
  set_fact:
    origin_ci_isolated_package: '{{ origin_ci_isolated_package_name }}-{{ origin_ci_isolated_package_version }}'
  when: origin_ci_isolated_package_version is defined

- name: export the full name of the package to install
  set_fact:
    origin_ci_isolated_package: '{{ origin_ci_isolated_package_name }}'
  when: origin_ci_isolated_package_version is not defined

# we need the --{en,dis}ablerepo functionality from yum so
# we cannot use the agnostic package module from Ansible
- name: install yum if the host does not have it
  package:
    name: yum
    state: present
  when: ansible_pkg_mgr != 'yum'

- name: 'uninstall {{ origin_ci_isolated_package_name }} if it is installed'
  package:
    name: '{{ origin_ci_isolated_package_name }}'
    state: absent

- name: 'register temporary repositories that we need to install {{ origin_ci_isolated_package }}'
  yum_repository:
    name: "{{ item | regex_replace('[^a-zA-Z0-9]', '') }}"
    description: 'Temporary repository necessary to install {{ origin_ci_isolated_package }}'
    state: present
    enabled: yes
    baseurl: '{{ item }}'
    gpgcheck: no
    sslverify: no
    sslclientcert: /var/lib/yum/client-cert.pem
    sslclientkey: /var/lib/yum/client-key.pem
    file: '{{ origin_ci_tmp_repofile }}'
  with_items: '{{ origin_ci_isolated_tmp_repourls | default([]) }}'

- name: 'add temporary repositories to the whitelist for install'
  set_fact:
    origin_ci_isolated_enabledrepos: "{{ origin_ci_isolated_enabledrepos }},{{ item | regex_replace('[^a-zA-Z0-9]', '') }}"
  with_items: '{{ origin_ci_isolated_tmp_repourls | default([]) }}'

- name: 'install {{ origin_ci_isolated_package }} using default repos'
  package:
    name: '{{ origin_ci_isolated_package }}'
    state: present
  when: origin_ci_isolated_enabledrepos is not defined

- name: work around docker install bug by disabling SELinux
  selinux:
    state: 'permissive'

- name: 'install {{ origin_ci_isolated_package }} using selected repos'
  yum:
    name: '{{ origin_ci_isolated_package }}'
    state: present
    disablerepo: '{{ origin_ci_isolated_disabledrepos }}'
    enablerepo: '{{ origin_ci_isolated_enabledrepos }}'
  when: origin_ci_isolated_enabledrepos is defined

- name: undo work-around for docker install bug by enabling SELinux
  selinux:
    state: 'enforcing'

- name: 'remove temporary repositories that we needed to install {{ origin_ci_isolated_package }}'
  yum_repository:
    name: "{{ item | regex_replace('[^a-zA-Z0-9]', '') }}"
    state: absent
  with_items: '{{ origin_ci_isolated_tmp_repourls | default([]) }}'

- name: 'remove temporary repofile that we needed to install {{ origin_ci_isolated_package }}'
  file:
    path: '{{ origin_ci_tmp_repofile }}'
    state: absent